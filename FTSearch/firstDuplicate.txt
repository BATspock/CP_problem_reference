Given an array a that contains only numbers in the range from 1 to a.length, find the first duplicate number for which the second occurrence has the minimal index. In other words, if there are more than 1 duplicated numbers, return the number for which the second occurrence has a smaller index than the second occurrence of the other number does. If there are no such elements, return -1.
// code signal
C++:
int solution(vector<int> a) {
    
    unordered_map<int, vector<int>> mp;
    
    for (int i =0;i<a.size();i++){
        mp[a[i]].push_back(i); 
    }
    int ans =-1;
    int cur_min=INT_MAX;
    for (auto it = mp.begin(); it!=mp.end();it++){
        if (it->second.size()>1){
            if (it->second[1] < cur_min) {
                cur_min = it->second[1];
                ans = it->first;
                
            }
        }
    }
    
    return ans;
}

