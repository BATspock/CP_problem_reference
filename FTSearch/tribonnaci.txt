class Solution {
    public int tribonacci(int n) {
        if (n==0) return 0;
        if (n==1||n==2) return 1;

        int dp[] = new int[n+1];
        dp[0]=0;
        dp[1]=1;
        dp[2]=1;
        for (int i =3;i<=n;i++){
            dp[i] = dp[i-3]+dp[i-2]+dp[i-1];
        }

        return dp[n];
    }
}

class Solution {
public:
    int tribonacci(int n) {
        if(n==0) return 0;
        if (n==1||n==2) return 1;

        vector<int> arr(n+1);


        arr[0]=0;
        arr[1]=1;
        arr[2]=1;

        for (int i=3;i<=n;i++){
            arr[i]= arr[i-3]+arr[i-2]+arr[i-1];
        }

        // for (int x: arr){
        //     cout<<x<<" ";
        // }

        return arr[n];
        
    }
};
