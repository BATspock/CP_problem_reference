Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.

Return the number of good nodes in the binary tree.

**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */


public class Node{
    TreeNode node;
    int val;

    public Node(TreeNode node, int val){
        this.node = node;
        this.val = val;
    }

    TreeNode getNode(){
        return this.node;
    }

    int getVal(){
        return this.val;
    }
} 
class Solution {
    public int goodNodes(TreeNode root) {
        int paths =0;

        Stack<Node> stack = new Stack<>();
        Node node = new Node(root, root.val);
        stack.push(node);

        while(!stack.isEmpty()){
            Node curNode = stack.pop();
            if (curNode.node.val >= curNode.val){
                paths++;
                if (curNode.node.right != null){
                    stack.push(new Node(curNode.node.right, curNode.node.val));
                }

                if (curNode.node.left!=null){
                    stack.push(new Node(curNode.node.left, curNode.node.val));
                }
            }

            else{
                if (curNode.node.right != null){
                    stack.push(new Node(curNode.node.right, curNode.val));
                }

                if (curNode.node.left!=null){
                    stack.push(new Node(curNode.node.left, curNode.val));
                }
            }
        }
        
        return paths;        
    }
}
