class Solution {
    public void moveZeroes(int[] nums) {
        Queue<Integer> q = new LinkedList<>();

        for (int i =0;i<nums.length;i++){
            if (nums[i]!=0){
                q.add(nums[i]);
                nums[i]=0;
            }
        }
        int index =0;
        while(! q.isEmpty()){
            int top = q.remove();
            nums[index] =top;
            index++;
        }
    }
}
C++:

class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        if (nums.size()==1) return;
        int i =0, j=1;

        while(i<j&& j<nums.size()){
            if (nums[i]==0 && nums[j]==0){
                j++;
            }
            else if (nums[i]==0 && nums[j]!=0){
                nums[i] = nums[j];
                nums[j] =0;
                i++;
                j++;
            }

            else{
                i++;
                j++;
            }

        }

        
    }
};
